user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    keepalive_timeout 65;
    server_tokens off;

    # Upstream para la API
    upstream api_backend {
        server api:3000;
    }

    # Upstream para Grafana
    upstream grafana_backend {
        server grafana:3000;
    }

    # Upstream para Prometheus
    upstream prometheus_backend {
        server prometheus:9090;
    }

    server {
        listen 80;
        server_name _;

        # Headers globales para ngrok
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # API - Redirige /api/ a api:3000/
        location /api/ {
            proxy_pass http://api_backend/;
            proxy_http_version 1.1;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Health check directo
        location /health {
            proxy_pass http://api_backend/health;
        }

        # Grafana - SIN rewrite, Grafana maneja el subpath internamente
        location /grafana/ {
            proxy_pass http://grafana_backend/grafana/;
            proxy_http_version 1.1;
            
            # Headers especiales para WebSocket support
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Headers adicionales para Grafana
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
        }

        # Prometheus - CON rewrite y configuraci칩n especial
        location /prometheus/ {
            proxy_pass http://prometheus_backend/;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            
            # Rewrite necesario para Prometheus
            rewrite ^/prometheus/(.*) /$1 break;
        }

        location /api-docs {
            proxy_pass http://api_backend/api-docs;
            proxy_http_version 1.1;
        }

        location /api-docs.json {
            proxy_pass http://api_backend/api-docs.json;
            proxy_http_version 1.1;
        }

        # Root - p치gina de informaci칩n b치sica
        location = / {
            return 200 '{"services":["api","grafana","prometheus"],"endpoints":["/api/","/grafana/","/prometheus/","/health"]}';
            add_header Content-Type application/json;
        }

        # Catch-all para rutas no encontradas
        location / {
            return 404 '{"error":"Route not found","available_endpoints":["/api/","/grafana/","/prometheus/","/health"]}';
            add_header Content-Type application/json;
        }
    }
}